name: Build and Deploy Docker Image to any K8S Cluster

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  build_push_docker_image:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'develop' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Package with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Set upd Docker Buildx
        uses: docker/setup-buildx-action@v3.4.0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.3.0
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-from: type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
          cache-to: type=inline

  k8s_deploy:
    needs: [ build_push_docker_image ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'main' || 'develop' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Kubernetes set context
        uses: Azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Create namespace if not exists
        run: |
          kubectl get namespace entrevistador-inteligente || kubectl create namespace entrevistador-inteligente

      - name: Secrets to Kubernetes
        run: |
          kubectl create secret generic kafka-upstar \
          --from-literal=KAFKA_UPSTAR_SERVER=${{ secrets.KAFKA_UPSTAR_SERVER }} \
          --from-literal=KAFKA_UPSTAR_USER=${{ secrets.KAFKA_UPSTAR_USER }} \
          --from-literal=KAFKA_UPSTAR_PASSWORD=${{ secrets.KAFKA_UPSTAR_PASSWORD }} \
          --namespace entrevistador-inteligente \
          --dry-run=client -o yaml | kubectl apply -f -
          
          kubectl create secret generic mongo-atlas \
          --from-literal=MONGO_ATLAS_CLUSTER=${{ secrets.MONGO_ATLAS_CLUSTER }} \
          --from-literal=MONGO_ATLAS_PASSWORD=${{ secrets.MONGO_ATLAS_PASSWORD }} \
          --from-literal=MONGO_ATLAS_USER=${{ secrets.MONGO_ATLAS_USER }} \
          --namespace entrevistador-inteligente \
          --dry-run=client -o yaml | kubectl apply -f -

      - name: Update vars deployment file
        env:
          DOCKER_IMAGE_TAG: ${{ vars.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
        run: |
          sed -i "s|\${DOCKER_IMAGE_TAG}|$DOCKER_IMAGE_TAG|g" ./deploy/k8s/deployment.yml
          cat ./deploy/k8s/deployment.yml
        shell: bash

      - name: Deploy
        uses: Azure/k8s-deploy@v5
        with:
          action: deploy
          strategy: basic
          namespace: entrevistador-inteligente
          manifests: |
            ./deploy/k8s/deployment.yml
